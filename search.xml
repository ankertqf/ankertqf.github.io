<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>单反斜杠自动转换为双反斜杠</title>
    <url>/2020/04/11/%E5%8D%95%E5%8F%8D%E6%96%9C%E6%9D%A0%E8%87%AA%E5%8A%A8%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%8F%8C%E5%8F%8D%E6%96%9C%E6%9D%A0/</url>
    <content><![CDATA[<h1 id="使用MFC自动将windows路径中单反斜杠自动转换为双反斜杠"><a href="#使用MFC自动将windows路径中单反斜杠自动转换为双反斜杠" class="headerlink" title="使用MFC自动将windows路径中单反斜杠自动转换为双反斜杠"></a>使用MFC自动将windows路径中单反斜杠自动转换为双反斜杠</h1><h2 id="缘由："><a href="#缘由：" class="headerlink" title="缘由："></a>缘由：</h2><p>&ensp;&ensp;由于windows下路径复制时为单杠，手动改为双杠效率极低，因此想要实现单杠自动转换的代码，经过各种尝试发现只有在使用C的scanf和python的input()等输入函数时单杠才不会被当作转义字符，类似r’str\str’中r的作用，给变量赋值时会自动转为双反斜杠。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> Path[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%[^\n]"</span>, Path);<span class="comment">//以换行为结尾，可以读取带空格的字符串</span></span><br><span class="line">	<span class="built_in">cout</span> &lt;&lt; Path &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	system(<span class="string">"pause"</span>);</span><br><span class="line">	<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/ankertqf/ankertqf.github.io/hexo/source/images/200401_2.png" alt="在这里插入图片描述">  &ensp;&ensp;&ensp;<img src="https://raw.githubusercontent.com/ankertqf/ankertqf.github.io/hexo/source/images/200401_1.png" alt="在这里插入图片描述"></p>
<h2 id="Python-GUI"><a href="#Python-GUI" class="headerlink" title="Python GUI :"></a>Python GUI :</h2><p>首先尝试使用python中tkinter模块，实现了一个自动将输入路径中单斜杠转换为双反斜杠，并copy到剪切板的小程序：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> tkinter <span class="keyword">as</span> tk           <span class="comment"># 导入 Tkinter 库</span></span><br><span class="line"><span class="keyword">from</span> pyperclip <span class="keyword">import</span> copy </span><br><span class="line"></span><br><span class="line">root = tk.Tk()</span><br><span class="line"></span><br><span class="line">root.title(<span class="string">"replacePath"</span>) <span class="comment">#设置窗口标题</span></span><br><span class="line">root.geometry(<span class="string">"500x80"</span>) <span class="comment">#设置窗口尺寸</span></span><br><span class="line">l1 = tk.Label(root,text=<span class="string">"输入路径"</span>) <span class="comment">#标签</span></span><br><span class="line">l1.pack() <span class="comment">#指定包管理器放置组件</span></span><br><span class="line">user_path = tk.Entry(width = <span class="number">50</span>) <span class="comment">#创建文本框</span></span><br><span class="line">user_path.pack()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getpath</span><span class="params">()</span>:</span></span><br><span class="line">    Path=user_path.get() <span class="comment">#获取文本框内容</span></span><br><span class="line">    Path = Path.replace(<span class="string">'\\'</span>, <span class="string">'\\\\'</span>) <span class="comment">#转双反斜杠</span></span><br><span class="line">    copy(Path)</span><br><span class="line"></span><br><span class="line">tk.Button(root,text=<span class="string">"转换并复制"</span>,command=getpath).pack() <span class="comment">#command绑定获取文本框内容方法</span></span><br><span class="line"></span><br><span class="line">root.mainloop() <span class="comment"># 进入消息循环</span></span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/ankertqf/ankertqf.github.io/hexo/source/images/200401_3.png" alt="在这里插入图片描述"><br>打包：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pyinstaller -Fw replacePath.py</span><br></pre></td></tr></table></figure>
<p>然后生成的exe竟然有36.3M！而且启动速度特别慢，一顿百度后发现广大网友都存在此类问题，并且有各类解决方案：</p>
<blockquote>
<p><a href="https://www.zhihu.com/question/281858271" target="_blank" rel="noopener">https://www.zhihu.com/question/281858271</a></p>
</blockquote>
<p>尝试用python虚拟环境的方法，在虚拟环境中只安装exe相关的模块，打包后的exe缩小到了8.72M，但是启动速度还是特别慢。</p>
<h2 id="vs2015-MFC"><a href="#vs2015-MFC" class="headerlink" title="vs2015+MFC:"></a>vs2015+MFC:</h2><p>新建项目-&gt;模板-&gt;Visual C++-&gt;MFC应用程序，应用程序类型选：基于对话框，MFC的使用：在静态中使用MFC。<br><img src="https://raw.githubusercontent.com/ankertqf/ankertqf.github.io/hexo/source/images/200401_4.png" alt="在这里插入图片描述"><br><img src="https://raw.githubusercontent.com/ankertqf/ankertqf.github.io/hexo/source/images/200401_5.png" alt="在这里插入图片描述"><br>双击：资源文件-&gt;MFCApplication1.rc-&gt;Dialog-&gt;IDD_MFCAPPLICATION1_DIALOG<br>将窗口中默认空间删除，从工具箱鼠标左键选中所需控件拖入到窗口中，这里选的时Button和Edit Control，可以自由拉伸控件尺寸，可以右键点击属性修改控件内容（比如Button1的名字），如下图：<br><img src="https://raw.githubusercontent.com/ankertqf/ankertqf.github.io/hexo/source/images/200401_6.png" alt="在这里插入图片描述"><br>右键点击示例编辑框，选择添加变量，输入变量名input_edit，该变量用来接收文本框的输入内容，<br>点击完成：<img src="https://raw.githubusercontent.com/ankertqf/ankertqf.github.io/hexo/source/images/200401_7.png" alt="在这里插入图片描述"><br>双击Button1按钮，进入按钮控制模块添加代码，当点击该按钮时触发这部分代码：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CMFCApplication1Dlg::OnBnClickedButton1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">char</span> Path[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">	<span class="keyword">char</span> outPath[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">	<span class="keyword">char</span>* temp = outPath;</span><br><span class="line">	input_edit.GetWindowText(inputPath);<span class="comment">//从文本框获取输入内容</span></span><br><span class="line">	<span class="built_in">memcpy</span>(Path, inputPath, inputPath.GetLength());</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//将单反斜杠替换为双反斜杠</span></span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(Path); ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		*(temp++) = Path[i];</span><br><span class="line">		<span class="keyword">if</span> (Path[i] == <span class="string">'\\'</span>)</span><br><span class="line">			*(temp++) = <span class="string">'\\'</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//将修改结果显示到文本框</span></span><br><span class="line">	input_edit.SetWindowText(outPath);</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//自动将修改结果copy到剪切板</span></span><br><span class="line">	<span class="keyword">if</span> (OpenClipboard())</span><br><span class="line">	&#123;</span><br><span class="line">		HGLOBAL clipbuffer;</span><br><span class="line">		<span class="keyword">char</span> * <span class="built_in">buffer</span>;</span><br><span class="line">		EmptyClipboard();</span><br><span class="line">		<span class="keyword">int</span> a = <span class="built_in">strlen</span>(outPath) + <span class="number">1</span>;</span><br><span class="line">		clipbuffer = GlobalAlloc(GMEM_DDESHARE, a);</span><br><span class="line">		<span class="built_in">buffer</span> = (<span class="keyword">char</span>*)GlobalLock(clipbuffer);</span><br><span class="line"></span><br><span class="line">		<span class="built_in">strcpy</span>(<span class="built_in">buffer</span>, outPath);</span><br><span class="line">		GlobalUnlock(clipbuffer);</span><br><span class="line">		SetClipboardData(CF_TEXT, clipbuffer);</span><br><span class="line">		CloseClipboard();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行，输入路径，点击转换并复制会自动将修改后的路径复制到剪切板，生成的exe大小为3.37M，启动速度超快，可放在任何位置，也可以固定到任务栏，极其方便。<br><img src="https://raw.githubusercontent.com/ankertqf/ankertqf.github.io/hexo/source/images/200401_9.png" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>GUI</category>
      </categories>
      <tags>
        <tag>反斜杠</tag>
        <tag>tkinter</tag>
        <tag>MFC</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 文章多级分类</title>
    <url>/2020/03/19/Hexo%20%E6%96%87%E7%AB%A0%E5%A4%9A%E7%BA%A7%E5%88%86%E7%B1%BB/</url>
    <content><![CDATA[<h1 id="Hexo-文章多级分类"><a href="#Hexo-文章多级分类" class="headerlink" title="Hexo 文章多级分类"></a>Hexo 文章多级分类</h1><p>Hexo原生支持父子分类，只需要在 Front-matter中的分类标记后面写下多个分类就行了。写在后面的分类就在前面分类的子分类，例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">categories: </span><br><span class="line">- Matlab</span><br><span class="line">- Matlab知识点</span><br></pre></td></tr></table></figure>
<p>会使分类<strong>Matlab知识点</strong>成为<strong>Matlab</strong>的子分类，而不是并列分类。</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>多级分类</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown首行缩进</title>
    <url>/2020/03/19/markdown%E9%A6%96%E8%A1%8C%E7%BC%A9%E8%BF%9B/</url>
    <content><![CDATA[<h1 id="markdown首行缩进"><a href="#markdown首行缩进" class="headerlink" title="markdown首行缩进"></a>markdown首行缩进</h1><p>&ensp;&ensp;首行缩进两个字符：(每个表示一个空格，连续使用两个即可）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&amp;ensp; 半角的空格</span><br><span class="line">&amp;emsp; 全角的空格</span><br><span class="line">注意(;)符号不能少</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>首行缩进</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言生成哈达玛（Hadamard）矩阵</title>
    <url>/2020/03/19/C%E8%AF%AD%E8%A8%80%E7%94%9F%E6%88%90%E5%93%88%E8%BE%BE%E7%8E%9B%EF%BC%88Hadamard%EF%BC%89%E7%9F%A9%E9%98%B5/</url>
    <content><![CDATA[<h1 id="C语言生成哈达玛（Hadamard）矩阵"><a href="#C语言生成哈达玛（Hadamard）矩阵" class="headerlink" title="C语言生成哈达玛（Hadamard）矩阵"></a>C语言生成哈达玛（Hadamard）矩阵</h1><p><strong>Hadamard矩阵定义：</strong><br>&ensp;&ensp;&ensp;&ensp;哈达玛（Hadamard)矩阵是由+1和-1元素构成的且满足Hn * Hn’=nI（这里Hn’为Hn的转置，I为单位方阵）n阶方阵。</p>
<p><strong>生成：</strong><br>调用matlab函数hadamard(2)生成2阶哈达玛矩阵：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hadamard(2)</span><br><span class="line">ans &#x3D;</span><br><span class="line">    	1     1</span><br><span class="line">    	1    -1</span><br></pre></td></tr></table></figure>
<p>在hadamard源码中可以看到</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for i &#x3D; 1:e</span><br><span class="line">    H &#x3D; [H  H</span><br><span class="line">         H -H]; </span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<p>知道任意2^n^阶hadamard矩阵都是2^n-1^阶hadamard矩阵通过如上结构的叠加</p>
<p>所以生成2^n^阶hadamard矩阵的C语言实现如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">int* GenerateHDM(int n)</span><br><span class="line">&#123;</span><br><span class="line">	int i, j, k, N;</span><br><span class="line">	int L = 1 &lt;&lt; n;//边长</span><br><span class="line">	int* Hadamard = (int*)malloc(L * L * sizeof(int));</span><br><span class="line"></span><br><span class="line">	Hadamard[0] = 1;</span><br><span class="line">	Hadamard[1] = 1;</span><br><span class="line">	Hadamard[L] = 1;</span><br><span class="line">	Hadamard[L + 1] = -1;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (k = 1; k &lt;= n - 1; k++)</span><br><span class="line">	&#123;</span><br><span class="line">		N = 1 &lt;&lt; k;</span><br><span class="line">		<span class="keyword">for</span> (i = 0; i &lt; N; i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span> (j = 0; j &lt; N; j++)</span><br><span class="line">			&#123;</span><br><span class="line">				Hadamard[(N + i) * L + j] = Hadamard[i * L + j];</span><br><span class="line">				Hadamard[i * L + N + j] = Hadamard[i * L + j];</span><br><span class="line">				Hadamard[(N + i) * L + N + j] = -Hadamard[i * L + j];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">return</span> Hadamard;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>调用GenerateHDM生成边长为8的hadamard矩阵结果如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1     1     1     1     1     1     1     1</span><br><span class="line">1    -1     1    -1     1    -1     1    -1</span><br><span class="line">1     1    -1    -1     1     1    -1    -1</span><br><span class="line">1    -1    -1     1     1    -1    -1     1</span><br><span class="line">1     1     1     1    -1    -1    -1    -1</span><br><span class="line">1    -1     1    -1    -1     1    -1     1</span><br><span class="line">1     1    -1    -1    -1    -1     1     1</span><br><span class="line">1    -1    -1     1    -1     1     1    -1</span><br></pre></td></tr></table></figure>
<p>matlab调用结果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1     1     1     1     1     1     1     1</span><br><span class="line">1    -1     1    -1     1    -1     1    -1</span><br><span class="line">1     1    -1    -1     1     1    -1    -1</span><br><span class="line">1    -1    -1     1     1    -1    -1     1</span><br><span class="line">1     1     1     1    -1    -1    -1    -1</span><br><span class="line">1    -1     1    -1    -1     1    -1     1</span><br><span class="line">1     1    -1    -1    -1    -1     1     1</span><br><span class="line">1    -1    -1     1    -1     1     1    -1</span><br></pre></td></tr></table></figure>
<p><strong>perfect !</strong></p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>Hadamard</tag>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>键值对container.Map</title>
    <url>/2020/03/18/Matlab%E9%94%AE%E5%80%BC%E5%AF%B9container.Map/</url>
    <content><![CDATA[<h1 id="键值对container-Map"><a href="#键值对container-Map" class="headerlink" title="键值对container.Map"></a>键值对container.Map</h1><h2 id="初始化方法："><a href="#初始化方法：" class="headerlink" title="初始化方法："></a>初始化方法：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">M &#x3D; containers.Map(keySet,valueSet)</span><br><span class="line">M &#x3D; containers.Map(keySet,valueSet,&#39;UniformValues&#39;,isUniform)</span><br><span class="line">M &#x3D; containers.Map(&#39;KeyType&#39;,kType,&#39;ValueType&#39;,vType)</span><br><span class="line">M &#x3D; containers.Map</span><br><span class="line"></span><br><span class="line">&#39;UniformValues&#39;为valueSet 中的统一值的指示符，表示valueSet中的类型必须一致，</span><br><span class="line">指定为 true (默认) 或 false。</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">keySet &#x3D; &#123;&#39;Jan&#39;,&#39;Feb&#39;,&#39;Mar&#39;,&#39;Apr&#39;&#125;;</span><br><span class="line">valueSet &#x3D; [327.2 368.2 197.6 178.4];</span><br><span class="line">M &#x3D; containers.Map(keySet,valueSet)</span><br><span class="line">M &#x3D; </span><br><span class="line">  Map with properties:</span><br><span class="line">        Count: 4</span><br><span class="line">      KeyType: char</span><br><span class="line">    ValueType: double</span><br><span class="line"></span><br><span class="line">M(&#39;Mar&#39;)</span><br><span class="line">ans &#x3D; 197.6000</span><br></pre></td></tr></table></figure>
<h2 id="修改元素"><a href="#修改元素" class="headerlink" title="修改元素:"></a>修改元素:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">M(&#39;Mar&#39;) &#x3D; 123</span><br><span class="line">M(&#39;Mar&#39;)</span><br><span class="line">ans &#x3D; 123</span><br></pre></td></tr></table></figure>
<h2 id="添加元素"><a href="#添加元素" class="headerlink" title="添加元素:"></a>添加元素:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">M(&#39;anker&#39;) &#x3D; 1024</span><br><span class="line">M.Count</span><br><span class="line">ans &#x3D; 5</span><br></pre></td></tr></table></figure>
<h2 id="删除元素："><a href="#删除元素：" class="headerlink" title="删除元素："></a>删除元素：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">M.remove(&#39;anker&#39;) </span><br><span class="line">ans &#x3D; </span><br><span class="line">  Map - 属性:</span><br><span class="line">        Count: 4</span><br><span class="line">      KeyType: char</span><br><span class="line">    ValueType: double</span><br></pre></td></tr></table></figure>
<h2 id="isKey"><a href="#isKey" class="headerlink" title="isKey:"></a>isKey:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">M.isKey(&#39;anker&#39;)或isKey(M, &#39;anker&#39;)</span><br><span class="line">ans &#x3D; 0</span><br></pre></td></tr></table></figure>
<h2 id="返回key"><a href="#返回key" class="headerlink" title="返回key:"></a>返回key:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">keys(M)或M.keys</span><br><span class="line">ans &#x3D;</span><br><span class="line"> 1×4 cell 数组</span><br><span class="line">   &#123;&#39;Apr&#39;&#125;    &#123;&#39;Feb&#39;&#125;    &#123;&#39;Jan&#39;&#125;    &#123;&#39;Mar&#39;&#125;</span><br></pre></td></tr></table></figure>
<h2 id="返回value"><a href="#返回value" class="headerlink" title="返回value:"></a>返回value:</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">values(M)或M.values</span><br><span class="line">ans &#x3D;</span><br><span class="line">  1×4 cell 数组</span><br><span class="line">    &#123;[178.4000]&#125;    &#123;[368.2000]&#125;    &#123;[327.2000]&#125;    &#123;[123]&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Matlab</category>
        <category>Matlab知识点</category>
      </categories>
  </entry>
</search>
